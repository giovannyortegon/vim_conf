""set nocompatible
filetype off

""set rtp+=~/.vim/bundle/Vundle.vim
""call vundle#begin()

""Plugin 'VundleVim/Vundle.vim'
""Plugin 'flazz/vim-colorschemes'

""call vundle#end()

" Directorio de plugins
"call plug#begin('~/.local/share/nvim/plugged')
"call plug#begin('~/.vim/autoload/plug.vim')
call plug#begin('~/.vim/plugged')
"Plug 'dracula/vim'
Plug 'joshdick/onedark.vim'
""Plug 'itchyny/lightline.vim'
""Plug 'honza/vim-snippets'
Plug 'scrooloose/nerdtree'
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'  " Temas para airline
""Plug 'Yggdroot/indentLine'
""Plug 'xuyuanp/nerdtree-git-plugin'

call plug#end()

let g:configuracion_del_plugin = 1

" NerdTree
let g:NERDTreeChDirMode = 2  " Cambia el directorio actual al nodo padre actual
" Abrir/cerrar NERDTree con F2
map <F2> :NERDTreeToggle<CR>

let g:airline#extensions#tabline#enabled = 1  " Mostrar buffers abiertos (como pestañas)
let g:airline#extensions#tabline#fnamemod = ':t'  " Mostrar sólo el nombre del archivo
let g:airline_theme='deus'
" Cargar fuente Powerline y símbolos (ver nota)
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'

" No mostrar en ciertos tipos de buffers y archivos
let g:indentLine_fileTypeExclude = ['text', 'sh', 'help', 'terminal']
let g:indentLine_bufNameExclude = ['NERD_tree.*', 'term:.*']


set noshowmode  " No mostrar el modo actual (ya lo muestra la barra de estado)
filetype plugin indent on

set encoding=utf-8
syntax enable
set statusline=%{getcwd()}\/\%f%=%-14.(%l,%c%V%)\ %P
" Title
set title
set ruler
set textwidth=79
" Cursor
au WinLeave * set nocursorline
au WinEnter * set cursorline
"set paste
set cursorline
set number
" Whitespaces
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
"highlight ExtraWhitespace ctermbg=cyan guibg=cyanautocmd InsertLeave * redraw!
"match ExtraWhitespace /\s\+$\| \+\ze\t/
autocmd BufWritePre * :%s/\s\+$//e
" Mouse
set mouse=a
"set clipboard+=named
" Iteration lines
set list
set listchars=tab:.\ ,eol:<
" Indent
" use indents of 4 spaces
set shiftwidth=4
" An indentation every four columns
set tabstop=4
" Let backspace delete indent
set softtabstop=4
" round indent to the nearest multiple of shiftwidth
set shiftround
set autoindent
set smartindent
set backspace=indent,eol,start
set cindent
" File Explorer
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 15
" Open Explorer command
map <silent> <C-n> :Vexplore<CR>
" Open Terminal command
map <silent> <C-t> :rightbelow term bash<CR>
" Open new vertical window
map <silent> <C-l> :rightbelow vsplit<CR>
" Search
set incsearch
set hlsearch
" Mode
set showmode
" Highlight commads
set showcmd
set wildmenu
" Save
set autowriteall
set commentstring=\ #\ %s
set shell=bash\ -login
" Theme
"colorscheme nighted
set termguicolors
set background=dark
let g:edge_style = 'neon'
let g:edge_disable_italic_comment = 1
""colorscheme edge
colorscheme onedark
" close brackets
:inoremap ( ()<Esc>i
:inoremap < <><Esc>i
:inoremap { {}<Esc>i
:inoremap [ []<Esc>i
:inoremap " ""<Esc>i
:inoremap ' ''<Esc>i
:inoremap ` ``<Esc>i

" clang stuff
let g:clang_library_path='/usr/lib/'
let g:clang_user_options='|| exit 0'
let g:clang_complete_auto = 1
let g:clang_compelte_macros=1
let g:clang_complete_copen = 1
let g:clang_debug = 1
let g:clang_snippets=1
let g:clang_conceal_snippets=1
let g:clang_snippets_engine='clang_complete'
